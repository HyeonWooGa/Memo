GIT AND GITHUB

#5.0 What is Git

- 프로 처럼 코딩하고 싶다면 꼭 알아야 함

- 깃에서는 어던 파일이든 사용가능

- 깃은 파일을 계속 추적하는 것, 변경사항을 계속 저장해 줌

- 깃은 파일의 변경내역을 계속해서 추적해주는 버젼 컨트롤 시스템 깃허브는  파일 내역과 파일들을 올려주는 공간

#5.1 What is Github

- 이번 영상에서 설명해주고 싶은 건 repository(저장소), repository 는 우리의 코드가 살고 있는 곳, 코드를 넣을 폴더, 코드의 변경 내역, 히스토리 등을 가지고 있는 폴더

- 비공개 모드가 있음, 나만 볼 수 있는 것

- 파일마다 히스토리를 볼 수 있음

- commit 이라는 시점이 있다

- commit 을 확인해보면 코드가 어떻게 변경되었는 지 확인 할 수 있음 이를 식별해 주는 것은 Git 

- 명확하게 뭐가 변경되었는 지 확인하기가 쉬우, 변경 사항 확인이 쉬움

- 아주 아주 강력한 툴

- 코드가 바뀌면 코밋을 하고, 코밋은 내가 변경하고 싶은 시점이라고 생각하면 됌

- 코밋 = 버젼

- 예를 들어 우리가 실수 했다면 그 시점으로 돌릴수도 있다. 아주 중요한 점

- 진짜 진짜 중요한 건 Git 과 Github 를 이해하는 것

#5.2 Creating a Github Repository

- 데스크탑의 폴더를 업로드 해주는 방법과 깃허브 내에 레포지토리를 만들어주는 방법이 있음

- 레포지토리를 만들때 레포지토리의 이름은 공백없이 소문자로 입력함

- 퍼블릭으로 레포지토리를 만드는 게 항상 좋다, 포트폴리오도 되고, 코드가 잘 못 되었을 때 도움도 받을 수 있음

#5.3 Making Our First Commits

- 깃허브에서 만든 레포지토리 폴더를 비쥬얼스튜디오코드로 불러와서 README.md 를 만들어 준다.

- 깃허브 데스크탑에서 잘 추가 되었는지 확인하고 코밋을 만들어 준다 설명은 없어도 타이틀은 꼭 있어야됌

- 깃허브 데스크탑에서 커밋을 하면 컴퓨터에만 저장되어 있고 푸쉬를 해줘야 깃허브 서버에 올라감

- 파일을 변경하고 저장한뒤, 파일을 체크하고 코밋 타이틀을 적어 저장, 푸쉬해줌

- 이는 빙산의 일각!